{
  "sources": [
    {
      "title": "博客园 - xaoc",
      "feedUrl": "https://feed.cnblogs.com/blog/u/430405/rss/",
      "siteUrl": null,
      "articles": [
        {
          "id": "https://www.cnblogs.com/xaoc/p/16703504.html",
          "author": null,
          "description": "C/C++ 编译运行环境配置 0、概览 主要分为三步 VS Code 与 TDM-GCC 下载 VS Code 与 TDM-GCC 安装 VS Code 必要插件的安装与设置 1、VS Code 与 TDM-GCC 下载 这两者的下载大概率会出现网络问题，基本下载不动 vscode 的解决方法是换用",
          "link": "https://www.cnblogs.com/xaoc/p/16703504.html",
          "publishedOn": "2022-09-17T12:30:00.000Z",
          "wordCount": 338,
          "title": "C/C++ 编译运行环境配置 - xaoc",
          "imageUrl": null
        },
        {
          "id": "https://www.cnblogs.com/xaoc/p/15046597.html",
          "author": null,
          "description": "1. 准备工作 下载： vscode：https://code.visualstudio.com/ mingw64：https://sourceforge.net/projects/mingw-w64/files/ seh结尾是纯64位编译.sjlj结尾是32,64两种编译，下seh的就行 2. 安",
          "link": "https://www.cnblogs.com/xaoc/p/15046597.html",
          "publishedOn": "2021-07-22T13:52:00.000Z",
          "wordCount": 305,
          "title": "mingw64+vscode C/C++环境 - xaoc",
          "imageUrl": null
        },
        {
          "id": "https://www.cnblogs.com/xaoc/p/14982064.html",
          "author": null,
          "description": "安装 前期准备 下载 mysql5.7 和 mysql8.0 mysql5.7 需要 vc2013 下载 安装文档 mysql8.0 需要 vc2015 下载 安装文档 其他版本的参见该版本的文档 目录结构： 添加环境变量 (部署多版本mysql就别添加环境变量) You should not ad",
          "link": "https://www.cnblogs.com/xaoc/p/14982064.html",
          "publishedOn": "2021-07-07T08:22:00.000Z",
          "wordCount": 410,
          "title": "win10 安装配置双版本mysql （mysql5.7 mysql8.0） - xaoc",
          "imageUrl": null
        },
        {
          "id": "https://www.cnblogs.com/xaoc/p/13771829.html",
          "author": null,
          "description": "原文：https://www.cnblogs.com/Observer-A/p/13771829.html 1. 开始安装 安装时最好断网，否则可能会卡在 misc postinstall configurations 到bios下把secure&#160;boot和fastboot关掉 2. 挂载点 挂载点",
          "link": "https://www.cnblogs.com/xaoc/p/13771829.html",
          "publishedOn": "2020-10-05T14:54:00.000Z",
          "wordCount": 550,
          "title": "记一次manjaro安装配置 - xaoc",
          "imageUrl": null
        },
        {
          "id": "https://www.cnblogs.com/xaoc/p/13768590.html",
          "author": null,
          "description": "参考： 64位UEFI下的WinPE + LinuxPE多启动Grub2 U盘grub2 直接启动 ubuntu，fedora，manjaro的live iso样例GRUB2配置文件&quot;grub.cfg&quot;详解(GRUB2实战手册)grub.cfg[分享] 4.20 小更新 GRUB2 引导WINPE",
          "link": "https://www.cnblogs.com/xaoc/p/13768590.html",
          "publishedOn": "2020-10-04T14:05:00.000Z",
          "wordCount": 405,
          "title": "grub2制作 微PE WinPE+Manjaro LiveCD 双引导启动盘 - xaoc",
          "imageUrl": null
        },
        {
          "id": "https://www.cnblogs.com/xaoc/p/13734938.html",
          "author": null,
          "description": "0. 结果 1. 官网下这个 2.&#160;然后安装 3.&#160;汉化文件超星有留 4.&#160;先把codeblocks关掉，将Installation都给复制到C:\\Users\\chaos\\AppData\\Roaming\\CodeBlocks下的default.conf里，吧原本的替换了 5.&#160;下个JetBrains",
          "link": "https://www.cnblogs.com/xaoc/p/13734938.html",
          "publishedOn": "2020-09-26T06:52:00.000Z",
          "wordCount": 274,
          "title": "codeblocks配置 - xaoc",
          "imageUrl": null
        },
        {
          "id": "https://www.cnblogs.com/xaoc/p/13695282.html",
          "author": null,
          "description": "更新软件的时候没注意，把电脑给重启了 重启完就报错 error: file &#39;/boot/vmlinuz-5.7-x86_64&#39; not found 搜了几篇文章解决了，记个笔记 0. 先用rufus吧manjaro的镜像写到u盘 从u盘进去 1. 先用sudo&#160;fdisk -l&#160;和lsblk&#160;判断",
          "link": "https://www.cnblogs.com/xaoc/p/13695282.html",
          "publishedOn": "2020-09-19T02:44:00.000Z",
          "wordCount": 343,
          "title": "manjaro error: file '/boot/vmlinuz-5.7-x86_64' not found - xaoc",
          "imageUrl": null
        },
        {
          "id": "https://www.cnblogs.com/xaoc/p/12529774.html",
          "author": null,
          "description": "用起来还是不是很舒服，电脑不行真的很痛苦w(ﾟДﾟ)w 1.java环境配置 1.装插件 vscode要编写和调试java程序的话，起码要安装这两个插件 Language Support for Java(TM) by Red Hat Debugger for Java Java Extension",
          "link": "https://www.cnblogs.com/xaoc/p/12529774.html",
          "publishedOn": "2020-05-24T14:09:00.000Z",
          "wordCount": 325,
          "title": "用VSCode配置java环境学习algs4踩坑笔记 - xaoc",
          "imageUrl": null
        },
        {
          "id": "https://www.cnblogs.com/xaoc/p/12372657.html",
          "author": null,
          "description": "20/12/10 1.CMakeLists.txt里加上这几句 set(CMAKE_CXX_FLAGS&#160;&quot;-g&#160;-fexec-charset=GBK&quot;) set(CMAKE_BUILD_TYPE&#160;&quot;Debug&quot;) set(CMAKE_CXX_FLAGS_DEBUG&#160;&quot;$ENV{CXXFLAGS}&#160;-",
          "link": "https://www.cnblogs.com/xaoc/p/12372657.html",
          "publishedOn": "2020-05-24T14:07:00.000Z",
          "wordCount": 535,
          "title": "VSCode C/C++编译调试 配置 - xaoc",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "VATE快乐屋",
      "feedUrl": "https://blog.vatebur.cn/atom.xml",
      "siteUrl": "https://blog.vatebur.cn",
      "articles": [
        {
          "id": "https://blog.vatebur.cn/archives/fan-shi-ji-ben-gai-nian",
          "author": null,
          "description": "超键、候选键、主键\n超键\n超键(super key)：在关系中能唯一标识元组的属性集称为关系模式的超键\n由超键的定义可知，在学生表中含有学号或者身份证号的任意组合都可以唯一标识一个学生，那么它们就是此表的超键。如：（学号）、（身份证号）、（学号，姓名）、（身份证号，性别）等。\n候选键\n候选键(candidate key)：不含有多余属性的超键称为候选键。也就是关系中的一个属性组，其值能唯一标识一个元组。若从属性组中去掉任何一个属性，它就不具有这一性质了，这样的属性组称作候选键。\n候选键属于超键，它是最小的超键，就是说如果再去掉候选键中的任何一个属性它就不再是超键了。对于（学号、姓名）来说，去掉姓名后仍是一个超键，那么它就不是候选键。其中，学生表中的候选键为：（学号）、（身份证号），主属性就是学号、身份证号。\n主属性：任何一个候选键中的属性称作主属性。（请记住这个概念）\n主键\n主键(primary key)：用户从一个关系的多个候选键中，选定一个作为主键。\n主键就是候选键里面的一个，用户可以选择，那么在这里我们选择（学号）作为学生表的主键。\n第一范式、第二范式、第三范式、BCNF范式\n1NF\n定义：关系中每一分量不可再分。即不能以集合、序列等作为属性。（也就是不能表中套表，要保证数据的原子性。）\n2NF\n定义：在1NF基础上，消除非主属性对键的部分依赖，则称它符合2NF。\n3NF\n定义：在2NF基础上，消除非主属性对键的传递依赖，则称它符合3NF。\nBCNF范式\n是要在 3NF 的基础上消除主属性对于码的部分与传递函数依赖。",
          "link": "https://blog.vatebur.cn/archives/fan-shi-ji-ben-gai-nian",
          "publishedOn": "2022-09-17T15:43:13.000Z",
          "wordCount": 514,
          "title": "范式基本概念",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/814689127",
          "author": null,
          "description": "简介\n一般处理流程\n故障发现\n操作系统指标\n负载\nCPU 使用率\n磁盘空间\nIO 使用率\nSWAP 情况\n\n数据库层面指标\n数据库存活\n连接数\n慢 SQL\n主从延迟\n\n\n故障定位\n检查当前和最近的操作\n操作系统层检查\n数据库层检查\n\n故障解决\n1.慢 SQL\n选择条件上没有索引或者索引效率低。\n有索引,但没有用到索引,或者选择了错误的索引。\n\n2.SQL 执行频率高\n恶意攻击\n缓存失效\n应用实现逻辑不合理\n业务量突增\n\n3.锁冲突\n4.硬件问题\n5.参数配置不合理\n\n\n经典故障案例\n\n\n简介\nMySQL 的故障诊断，需要对整个系统的架构、硬件、软件都有比较深入的了解，由于数据库服务的特点，一旦出现问题，可能影响整个系统的可用性,需要在最短的时间内解决。\n一般处理流程\n按照发现→定位→解决的顺序，对故障处理的一般流程和关键点做一下简单介绍。\n故障发现\n发现依赖于监控，对于数据库服务,一定要构建一套完整的监控系统,在出现问题的时候，能够通过邮件、短信、电话等形式将报警信息发送给DBA和其他相关人员，比故障更可怕的是,出现了故障还没人知道。数据库监控一般应该包括以下几个指标。\n操作系统指标\n负载\n负载是衡量服务器整体压力最直观的指标，代表平均有多少进程在等待被 CPU 调度，可以通过 W 、uptime 、top 等命令来获取。\n[root@GreatSQL ~]# uptime 02:57:29 up 3 days, 15:51,  2 users,  load average: 0.30, 0.08, 0.07\nload average后面的3个数值，分别代表 1 min 平均负载、5 min 平均负载、15 min 平均负载。一般来说，应该保持负载来 0.7 以下，满载的之后意味着系统开始拥塞。\n负载报警的阈值，应该根据系统正常状态下的负载来定。当负载显著升高时，就应该及时…",
          "link": "https://blog.vatebur.cn/archives/814689127",
          "publishedOn": "2022-09-17T12:58:29.000Z",
          "wordCount": 913,
          "title": "深入浅出MySQL学习笔记——故障诊断",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/7328945",
          "author": null,
          "description": "简介\nPS库\n开启 PS 库\nPS 库的表\n\nSYS库\nSYS 库的对象\nSYS对象的实际使用\n主机相关\nInnoDB 相关\n连接数和会话相关\nDB 相关\nSQL 语句相关\n\n\n小节\n\n\n简介\nMySQL Performance Schema (PS) 和 SYS Schema 是MySQL官方提供的，可以用来监控性能和诊断故障。\nPS 库主要用来收集数据库运行时的性能数据，通过充分利用PS库的数据，让DBA更了解数据库的运行状态，也有利于定位问题。\nSYS库，是MySQL 从 5.7.7 版本开始提供的。DBA和开发可以使用SYS库进行数据库的性能调优和问题诊断，SYS库除了 sys_config 表，其他都是视图，视图来源于 PS 库和 IS(informantion_schema) 库。也就是说 SYS 库是为了更直观易懂的展示 PS 库和 IS 库。\nPS库\n开启 PS 库\nMYSQL 5.6 之后的版本是默认开启的。如果需要手动开启和关闭，可以在 my.cof 文件中修改相应配置。例如添加以下参数，开启 PS 库：\n[mysqld]performance_schema=ON\n在 MySQL 实例中检查是否开启：\nmysql> show variables like 'performance_schema';+--------------------+-------+| Variable_name      | Value |+--------------------+-------+| performance_schema | ON    |+--------------------+-------+1 row in set (0.07 sec)\nPS 库的开启或关闭，需要修改配置文件后重启实例生效。如果在线修改 performance_schema 参数的值，会…",
          "link": "https://blog.vatebur.cn/archives/7328945",
          "publishedOn": "2022-09-17T03:29:34.000Z",
          "wordCount": 1832,
          "title": "深入浅出MySQL学习笔记之——PS/SYS 数据库",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/shen-ru-qian-chu-mysql-xue-xi-bi-ji-zhi-pssys-shu-ju-ku",
          "author": null,
          "description": "简介\nMySQL Performance Schema (PS) 和 SYS Schema 是MySQL官方提供的，可以用来监控性能和诊断故障。\nPS 库主要用来收集数据库运行时的性能数据，通过充分利用PS库的数据，让DBA更了解数据库的运行状态，也有利于定位问题。\nSYS库，是MySQL 从 5.7.7 版本开始提供的。DBA和开发可以使用SYS库进行数据库的性能调优和问题诊断，SYS库除了 sys_config 表，其他都是视图，视图来源于 PS 库和 IS(informantion_schema) 库。也就是说 SYS 库是为了更直观易懂的展示 PS 库和 IS 库。\nPS库\n开启 PS 库\nMYSQL 5.6 之后的版本是默认开启的。如果需要手动开启和关闭，可以在 my.cof 文件中修改相应配置。例如添加以下参数，开启 PS 库：\n[mysqld]performance_schema=ON\n在 MySQL 实例中检查是否开启：\nmysql> show variables like 'performance_schema';+--------------------+-------+| Variable_name      | Value |+--------------------+-------+| performance_schema | ON    |+--------------------+-------+1 row in set (0.07 sec)\nPS 库的开启或关闭，需要修改配置文件后重启实例生效。如果在线修改 performance_schema 参数的值，会报错：\nmysql> set global performance_schema=off;ERROR 1238 (HY000): Variable 'performance_schema'…",
          "link": "https://blog.vatebur.cn/archives/shen-ru-qian-chu-mysql-xue-xi-bi-ji-zhi-pssys-shu-ju-ku",
          "publishedOn": "2022-09-17T03:29:34.000Z",
          "wordCount": 1824,
          "title": "深入浅出MySQL学习笔记之——PS/SYS 数据库",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/typoraimgupload",
          "author": null,
          "description": "注册千牛云\n1.注册千牛云并申请COS存储桶\n注册流程此次省略\n2.注册完成后，在个人中心得到accessKey 和secretKey\n\n3.在相关页面得到 存储桶名称（bucket），域名，地区（area）\n\n得到上述5个信息（ak，sk， 存储桶，域名，地区）后就可以开始设置Typora\n配置Typora\n选择PicGO Core\n点击更新后，再点打开配置文件，填入以下内容\n您也可以选择不下载更新，但是笔者是更新后才能正常使用，所以还是推荐点一下下载更新。\n\n{  \"picBed\": {    \"uploader\": \"qiniu\",    \"qiniu\": {      \"accessKey\": \"\",      \"secretKey\": \"\",      \"bucket\": \"\", // 存储空间名      \"url\": \"\", // 自定义域名（网址）      \"area\": \"\", // 存储区域编号      \"options\": \"\", // 网址后缀，空着就好      \"path\": \"img/\" // 自定义存储路径，比如 img/    }  },  \"picgoPlugins\": {}}\n\n打开配置文件后发现是空文件，手动填入配置信息\n有几点需要注意以下\n\n网站的域名前需要加上http:// 或者 https://\n存储地区要转换成对应的编号\n\n\n存储区域存储区域编号\n\n华东z0\n华北z1\n华南z2\n北美na0\n东南亚as0\n\n点击验证图片上传选项，提示验证成功就可以了\n\n\n参考链接\n\nTypora + 七牛云图床快速配置，告别手动上传图片！ 小张Python 小张Python",
          "link": "https://blog.vatebur.cn/archives/typoraimgupload",
          "publishedOn": "2022-08-25T08:41:03.000Z",
          "wordCount": 565,
          "title": "Typora使用千牛云图床快速配置",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/edugithub",
          "author": null,
          "description": "证件准备\n1.请登录学信网\nhttps://account.chsi.com.cn/\n2.点击高等教育信息，点击在线验证报告，后面的步骤仅供参考，请自行摸索找到教育部学籍在线验证报告\n\n\n\n然后就的到了这个，怎么保存成pdf或者图片就不用教了吧\n\n然后把这个提交到github就行了，github是外国网站最好还是翻译一下。\n翻译有以下选择：\n1.用浏览器翻译后，手动编辑源码校对\n2.开始ps\n3.用官方的证件翻译服务，费用30块钱，申请流程如下↓\n申请英文翻译件管翻流程\n在这个地方\n\n按流程来就行 交30块钱，很快就能出结果。请注意英文翻译件的查看地址和中文不一样\n请在申请翻译的那个页面下载翻译件\n\n官方翻译文件比较省心，省去了已经翻译的麻烦\n花钱申请学信网官方英文翻译件，不是必须流程，可以使用其他方式免去花钱。\nGitHub申请流程\n1.请尝试裸连 https://education.github.com/ 如果开了代理会导致提交的时候显示地区错误\nGitHub会根据ip判断您是否在学校，所以请裸连。笔者是比较推荐电信的网络，不推荐移动。（南方移动墙中墙）\n2.登入后点击Join Global Campus\n![NWER@T)1QXNCD(WBAV}YQ8](https://oss.vatebur.cn/img/NWER@T)1QXNCD(WBAV}YQ8.png)\n3.在学校这里输入fzgs就会跳出对应的选项了，不知道为什么直接打FuZhou没反应\n\n4.下面的计划，请用你蹩脚的英文随便写一点，笔者写的是study and Communication code 这个尽量直接想一段话吧，就没必要照抄了\n\n4.最关键的上传证件环节，笔者申请了俩天，\n第一天，没有上传照片的按钮，只能用摄像头拍摄。笔者试着拍照上传但是被，秒拒了。\n第二天，有这个上传按钮，笔者上传证件后就直接通过了\n有没有Upload an image 上传图片按钮真的是随缘\n\n5.下面的证件类型就按情况填写吧，笔者也忘了填的是什么了。\n然后点下面的提交就行了，提交后是秒过。\n以上就是教程的全部内容了",
          "link": "https://blog.vatebur.cn/archives/edugithub",
          "publishedOn": "2022-08-25T08:04:26.000Z",
          "wordCount": 531,
          "title": "GitHub学生认证流程",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/greatsqlmysql-test",
          "author": null,
          "description": "/3. 从MySQL官网下载employees、sakila数据库，导入。\n/4. 创建一个InnoDB表t1，至少包含int、varchar、datetimie等多种类型的数据列，并根据下述要求插入数据。\n4.1 要求：用自增INT作为主键列。\n4.2 对t1表插入一列，放在varchar列的前面。\n4.3 对照t1表的各列类型，采用各自相关类型的函数，生成随机数据（包含中文字符）并写入该表。\n\n下载数据库\n安装sakila\n官方文档\n下载页面\n\n下载，安装\nwget https://downloads.mysql.com/docs/sakila-db.tar.gztar xvf /root/sakila-db.tar.gzrm sakila-db.tar.gz cd sakila-db/ mysql -u root -p'123456'source /root/sakila-db/sakila-schema.sql;source /root/sakila-db/sakila-data.sql;\n[root@localhost sakila-db]# lssakila-data.sql  sakila.mwb  sakila-schema.sql\n\nsakila-schema.sql文件包含创建sakila数据库结构所需的所有create语句，包括表、视图、存储过程和触发器。\nsakila-data.sql文件包含填充由sakila-schema.sql文件创建的结构所需的insert语句，以及初始数据加载后必须创建的触发器的定义。\nsakila.mwb文件是一个mysql工作台数据模型，您可以在mysql工作台中打开它来检查数据库结构。\n\n安装Employees\n\nEmployees数据库是一个用于学习和测试的数据库，大约160MB，4百万条记录\n\nGitHub仓库\nw…",
          "link": "https://blog.vatebur.cn/archives/greatsqlmysql-test",
          "publishedOn": "2022-08-22T10:11:16.000Z",
          "wordCount": 672,
          "title": "GreatSQL/MySQL数据库练习",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/greatsqlmysql",
          "author": null,
          "description": "二进制安装GreatSQL/MySQL\n\n\n在一个全新CentOS环境中，下载GreatSQL二进制包，手动安装，并根据GreatSQL提供的my.cnf模板适当调整后用于考核环境的my.cnf。\n\n完成初始化，并启动实例。\n\n\n安装操作系统\n在一个全新CentOS环境中，下载GreatSQL二进制包，手动安装，并根据GreatSQL提供的my.cnf模板适当调整后用于考核环境的my.cnf。\n安装操作系统：\n\n系统版本\n[root@localhost ~]# uname -aLinux localhost.localdomain 3.10.0-1160.76.1.el7.x86_64 #1 SMP Wed Aug 10 16:21:17 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux[root@localhost ~]#  rpm -q centos-releasecentos-release-7-9.2009.1.el7.centos.x86_64\n配置如下\n\nSSH连接：\n\nifconfig查看虚拟机的ip地址\nifconfig\n\n用ssh工具连接\n\n更新阿里源\n\n更改配置文件（很重要）\n备份CentOS 7系统自带yum源配置文件命令：\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n\n下载CentOS 7的repo文件\n wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n\nepo文件是Fedora中yum源（软件仓库）的配置文件，通常一个repo文件定义了一个或者多个软件仓库的细节内容，例如将从哪里下载需…",
          "link": "https://blog.vatebur.cn/archives/greatsqlmysql",
          "publishedOn": "2022-08-22T09:35:53.000Z",
          "wordCount": 1035,
          "title": "二进制安装GreatSQL/MySQL",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/docker%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B",
          "author": null,
          "description": "安装docker\ndocker我一般是使用脚本安装，官方有提供安装脚本。\n国内的机器可以用国内的镜像源会快一点。\n脚本晚上可以直接搜到，这里提供几个参考脚本。\n#用国内 daocloud （道客）一键安装脚本curl -sSL https://get.daocloud.io/docker | sh#官方脚本curl -sSL https://get.docker.com/ | sh#使用阿里镜像下载官方脚本curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n拉取镜像\n拉取heimdall的镜像\ndocker pull linuxserver/heimdall\n国内从 DockerHub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。\n改镜像源教程参考网站：Docker镜像加速\n创建容器\ndocker run -d --name=heimdall#指定容器名称-p 80:80 -p 443:443#-p 本地端口:容器内部端口。本地端口可以自定义-v /root/heimdall:/config  #-v 本地地址:docker内部地址。本地地址可以自定义--restart=unless-stopped#设置启动规则linuxserver/heimdall\n（附带）docker常用指令\ndocker pull [镜像名]#拉取镜像docker run#创建容器docker ps -q#查看容器IDdocker ps -a --no-trunc #查看容器完整的容器ID和镜像IDdocker restart [容器ID]#重启容器docker stop [容器ID]#暂停容器docker start [容器ID]#运行容器docker  rm [容器ID] #删除容器docker  rm $(docker ps -a -q) #删除所有容器",
          "link": "https://blog.vatebur.cn/archives/docker%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B",
          "publishedOn": "2022-07-15T08:50:29.000Z",
          "wordCount": 588,
          "title": "[docker]搭建个人浏览器导航页（heimdall）",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/html%E4%BB%A3%E7%A0%81%E6%95%B4%E7%90%86",
          "author": null,
          "description": "301重定向\n<!DOCTYPE HTML><html lang=\"zh-CN\">        <head>        <meta charset=\"utf-8\">        <title>           301重定向        </title>        <meta http-equiv=\"refresh\" content=\"0;url=https://blog.vatebur.cn/\" />        <meta http-equiv=\"Cache-Control\" content=\"no-transform\" />    </head>        <body>    </body></html>\n(搬运) 炫酷的时间转盘\n效果展示：\n\n<!DOCTYPE html><html lang=\"en\"><head>    <meta charset=\"UTF-8\">    <title>Title</title>    <style>        html{            background: #000;            color: #666;            font-size: 12px;            overflow:hidden;        }        *{            margin: 0;            padding: 0;        }        span{            display: block;            float: left;        }        .on{            color: #fff;        }        .wrapper{            width: 200px;      …",
          "link": "https://blog.vatebur.cn/archives/html%E4%BB%A3%E7%A0%81%E6%95%B4%E7%90%86",
          "publishedOn": "2022-07-13T16:49:27.000Z",
          "wordCount": 1062,
          "title": "HTML代码整理",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/%E7%BE%A4%E6%99%96docker%E9%83%A8%E7%BD%B2%E5%B8%A6web%E5%AE%B9%E5%99%A8%E7%9A%84%E7%AB%AF%E5%8F%A3%E9%85%8D%E7%BD%AE%E4%BF%A9%E7%A7%8D%E6%96%B9%E6%B3%95",
          "author": null,
          "description": "方法一：\n\n容器端口 ：按照你装的docker项目要求填\n说明书有，不能更改\n本地端口：可以自定义，找个没被用过的端口填就行\n到这里就已经可以\n添加完后就可以通过\"ip地址:本地端口\"访问了\n如果要用https协议访问，可以添加反向代理\n控制面板-登录门户-高级-反向代理服务器\n\n就按照图片填\n来源端口：外部网络的访问端口\n来源主机名[1]：填*\n目的地端口：上文提到的本地端口\n\n记得把这里填的端口 防火墙放行，或者把本地端口，端口转发\n#方法二（推荐）\n使用web station\n容器端口空着不添加\n\n创建完容器后点编辑，勾选图中所示的地方\n端口填容器端口\n\n\n\n\n下面就可以自行发挥了，出了通过端口甚至可以通过设置主机名访问\n两个是基于端口记得把这里填的端口 防火墙放行，或者端口转发什么的。\n\n\n\n来源主机名：外部网络访问群晖的ip地址，一般设置为，表示所有外部网络外网都能访问 ↩︎",
          "link": "https://blog.vatebur.cn/archives/%E7%BE%A4%E6%99%96docker%E9%83%A8%E7%BD%B2%E5%B8%A6web%E5%AE%B9%E5%99%A8%E7%9A%84%E7%AB%AF%E5%8F%A3%E9%85%8D%E7%BD%AE%E4%BF%A9%E7%A7%8D%E6%96%B9%E6%B3%95",
          "publishedOn": "2022-05-13T12:54:25.000Z",
          "wordCount": 516,
          "title": "群晖docker部署带web容器的端口配置(俩种方法）",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/halo-qqlogo",
          "author": null,
          "description": "解决固定评论模块头像，并且输入QQ号可以自动拉取！\n感谢大佬提供的评论模块js\n下载这个文件并且解压\nhttps://wwz.lanzouf.com/iCcLY04p3luj\n然后放到服务器上或者oss存储里，把js下载链接复制在如图所示的地方就可以了\n\n\n\n题外话：\n获取qq头像\nhttp://q1.qlogo.cn/g?b=qq&nk=QQ号&s=640\n改一下“QQ号”就可以获取头像了",
          "link": "https://blog.vatebur.cn/archives/halo-qqlogo",
          "publishedOn": "2022-05-12T08:25:55.000Z",
          "wordCount": 500,
          "title": "halo输入QQ号获取QQ头像和名称",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/%E7%BE%A4%E6%99%96docker%E6%90%AD%E5%BB%BAhalo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2",
          "author": null,
          "description": "写在前面：\n如果有一定部署能力可以直接去halo官网查看文档执行部署。\n本教程我是用docker部署的。\n官方docker部署文档\n一，新建存放halo的文件夹\n\n文件夹路径和文件夹名大家随意\n二，下载并修改配置文件，放在刚刚创建的文件夹里\n官方的配置文件下载链接\n大家可以下载到，本地电脑编辑后上传到群晖刚刚创建的文件夹里\n\n\n修改完上传到创建的目录\n三，拉取halo镜像\n\n\n\n四，创建容器\n\n双击创建容器\n\n根据自己情况，把自动启动钩上\n\n\n\n\n工作目录映射 /root/.halo，不能修改\n\n\n到这里就可以，用了。访问一下\n群晖ip：端口号，应该就可以进去了\n五，添加端口反向代理（非必要看自己情况\n\n\n为了安全，在一切都搞定之后，可以到防火墙里，把8090端口的外部访问关了，只允许通过反向代理的端口访问",
          "link": "https://blog.vatebur.cn/archives/%E7%BE%A4%E6%99%96docker%E6%90%AD%E5%BB%BAhalo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2",
          "publishedOn": "2022-05-12T03:43:42.000Z",
          "wordCount": 512,
          "title": "群晖docker搭建halo个人博客",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/%E5%AE%89%E5%8D%93%E7%AC%AC%E4%BA%94%E5%91%A8%E4%BD%9C%E4%B8%9Amd",
          "author": null,
          "description": "activity_main.xml\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:layout_width=\"match_parent\"    android:layout_height=\"match_parent\"    android:background=\"#d8e0e8\"    android:orientation=\"vertical\"&gt;    &lt;LinearLayout        android:layout_width=\"match_parent\"        android:layout_height=\"match_parent\"        android:orientation=\"vertical\"&gt;        &lt;LinearLayout            android:layout_width=\"match_parent\"            android:layout_height=\"wrap_content\"            android:gravity=\"center\"            android:orientation=\"horizontal\"&gt;            &lt;LinearLayout                android:layout_width=\"match_parent\"                android:layout_height=\"match_parent\"                android:orienta…",
          "link": "https://blog.vatebur.cn/archives/%E5%AE%89%E5%8D%93%E7%AC%AC%E4%BA%94%E5%91%A8%E4%BD%9C%E4%B8%9Amd",
          "publishedOn": "2022-03-24T00:08:20.000Z",
          "wordCount": 779,
          "title": "安卓第五周作业",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AE%89%E5%8D%93%E4%BD%9C%E4%B8%9Atoast%E7%9A%84%E4%BD%BF%E7%94%A8",
          "author": null,
          "description": "#第三周安卓作业，Toast的使用\n碎碎念：因为整安卓子系统的原因，写的比较晚。子系统和模拟器不兼容，卸了模拟器。好像蓝叠5可以兼容，但我没成功。\n这只是摆烂教程，真的要学习的话建议自己找点视频看，不要看我写的文章\n第一遍创建项目\n\n\n第二步编写layout布局，编写在layout文件夹里的xml文件。\nlayout是安卓负责前端显示的。类属于web里的html文件。都是通过标签设计页面\n记一下 俩个文本框<TextView/> 和按钮<Button/>的id号 面要用到\n\n 大概设计思路写在图里了，大家配合代码理解。\n\n\n 避免雷同，一定要自己改一点，实在不行的可以点Design按钮，图形化编程\n\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"    android:layout_width=\"match_parent\"    android:layout_height=\"match_parent\"    android:background=\"#d8e0e8\"    android:orientation=\"vertical\"&gt;    &lt;LinearLayout        android:layout_width=\"match_parent\"        android:layout_height=\"match_parent\"        android:orientation=\"vertical\"&gt;        &lt;LinearLayout            android:layout_width=\"match_parent\"        …",
          "link": "https://blog.vatebur.cn/archives/%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AE%89%E5%8D%93%E4%BD%9C%E4%B8%9Atoast%E7%9A%84%E4%BD%BF%E7%94%A8",
          "publishedOn": "2022-03-10T23:07:58.000Z",
          "wordCount": 721,
          "title": "第三周安卓作业，Toast的使用",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AE%89%E5%8D%93%E4%BD%9C%E4%B8%9A%E5%8F%AF%E8%A7%86%E5%8C%96%E7%BC%96%E7%A8%8B%E5%86%99%E4%B8%80%E4%B8%AA%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E7%95%8C%E9%9D%A2",
          "author": null,
          "description": "#第二周安卓作业 可视化编程写一个登录注册界面\n在看之前请先确保自己会创建项目，并且可运行。还不会的同学可以参考我之前做到教程\n点new project创建项目",
          "link": "https://blog.vatebur.cn/archives/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AE%89%E5%8D%93%E4%BD%9C%E4%B8%9A%E5%8F%AF%E8%A7%86%E5%8C%96%E7%BC%96%E7%A8%8B%E5%86%99%E4%B8%80%E4%B8%AA%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E7%95%8C%E9%9D%A2",
          "publishedOn": "2022-03-01T23:08:32.000Z",
          "wordCount": 497,
          "title": "第二周安卓作业 可视化编程写一个登录注册界面",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/35%E5%BC%A0%E5%9B%BE%E5%BC%80%E5%A7%8Bandroidstudio%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE",
          "author": null,
          "description": "#35张图开始Android Studio第一个项目\n下载一个安卓模拟器模拟器 什么模拟器都行 \n我用的是\n\n进入设置查看安卓版本，记下 我这里是是安卓6.0\n\n 找到模拟器的端口号 比如 mumu模拟器的端口号是** 7555**\n \n1.下载并打开Android Studio安装程序\n\n拉到最底，同意用户协议，下载\n\n 打开安装包\n\n取消勾选，然后点next\n \n选择安装路径，保险起见不要中文路径\n \n直接点install\n \n \n点netx\n\n点finish\n \n点ok\n\n点cancel\n\n \n选择皮肤\n\n都accept 全部都accept 后下面的finish就能点了\n\n \n这里很重要，记住SDK安装目录\n默认在 C:\\Users\\home\\AppData\\Local\\Android\\Sdk\n\n新建项目\n\n 输入项目名 项目地址 语言选择java \nsdk版本改成 模拟器的安卓版本\n \n第一次运行 下面几个步骤要加载比较久 请耐心等待 \n\n改android:text=\"学号 姓名\"\n \n找到sdk的位置 \n复制sdk里面的 platform-tools文件夹 复制一下路径\n我这边是C:\\Users\\home\\AppData\\Local\\Android\\Sdk\\platform-tools\n 打开cmd\n \n输入 cd +  platform-tools路径\n我这边是  cd C:\\Users\\home\\AppData\\Local\\Android\\Sdk\\platform-tools\n如果是的盘要先输入  D: 进入d盘 其他盘以此类推\n\n 输入 adb connect 127.0.0.1:模拟器端口号 \nmumu 端口号是 7555\n所以我输入adb connect 127.0.0.1:7555\n输入这个命令让adb连接到模拟器 \n回到软件 就会发现这里多一个模拟器的的选项 \n点运行按钮 等一下就好\n \n \nbaba",
          "link": "https://blog.vatebur.cn/archives/35%E5%BC%A0%E5%9B%BE%E5%BC%80%E5%A7%8Bandroidstudio%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE",
          "publishedOn": "2022-02-22T08:08:13.000Z",
          "wordCount": 565,
          "title": "35张图开始Android Studio第一个项目",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/%E5%AE%9A%E6%9C%9F%E6%80%BB%E7%BB%93linux%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4",
          "author": null,
          "description": "#【定期总结】Linux常用指令\n入门使用Linux有一段时间了，整理下使用Linux使用到的命令，给自己做个总结。\n一、安装与环境配置（wegt apt gcc yum python ffmegp）\n1.下载安装 wegt 可以下载连接文件\n2.使用apt 或yum 可以安装一些基础应用。\n3.python安装方式比较多 可以通过apt或yum安装 也可以编译安装。但是最后要搞好软连接。很容易出问题。通过命令安装要解决pip命令用不了的问题\n4.ffmegp搭建qqbot可能会用到 可以直接官网下载然后直接软连接。大多数教程都是要下载后编译安装，但是好像不需要，我也编译不了。也可以用别人准备好的安装命令安装。\napt-get install python3-distutils #好像是解决pip安装问题的\npython和ffmegp 的坑算是挺多的，可惜没有及时做总结。现在忘的差不多了。\n二、文件操作（打包压缩，解压，备份，删除，移动）\n删除：删除用rm命令 ，最好加上-r\nrm -rf /root/rm/\n打包：压缩和解压用的都是tar命令。文件上传和下载时最好打包成tar文件再传输。\n要备份的话把文件打包后用cp复制到备份文件夹\ntar xzvf 20220103.tar #解压 tar -cvf 20220103.tar go-cqhttp #压缩:tar -czvf 生成文件路径 要解压的文件路径 mv /root/20220103.tar /root/backup/  #移动：rm 目标路径 要移动文件路径\n三、screen分屏操作\nscreen在有任务需要后台执行的时候很方便。可以通过apt或yum安装命令安装\nscreen -S mane #新建窗口screen -ls #显示进程列表screen -r id/name #通过进程id或进程名进入screen…",
          "link": "https://blog.vatebur.cn/archives/%E5%AE%9A%E6%9C%9F%E6%80%BB%E7%BB%93linux%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4",
          "publishedOn": "2022-01-15T23:07:05.000Z",
          "wordCount": 714,
          "title": "【定期总结】Linux常用指令",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/linux%E5%AE%89%E8%A3%85python",
          "author": null,
          "description": "#Linux 安装Python\n1.下载python文件\n到Python官网\n2.找到想要的python版本 点downloads\n\n3.拉到页面最下方 找到对应的版本 右击复制出下载链接，\n\n4.在连接前面加上wget ，输入到终端即可开始下载\n国内可以用这个华为的下载地址：\nwget https://mirrors.huaweicloud.com/python/3.7.1/Python-3.7.1.tgz\n直接在终端输入就好；\n\n5.下载好以后用tar命令解压 ；cd命令进入解压出来的文件目录；执行./configure编译；用make安装；\ntar xf [压缩包名]\ncd [解压出来的文件夹名]\n./configure\nmake&amp;&amp;make install\npip3 install --upgrade pip\n\n\n\n\n如果提示这个就创一个新用户，以非root用户运行。\n顺便附上修改\"文件权限\"和修改\"用户所属组\"的命令\nusermod -g 用户组 用户名\nchomd -R 权限 文件名",
          "link": "https://blog.vatebur.cn/archives/linux%E5%AE%89%E8%A3%85python",
          "publishedOn": "2021-12-29T23:06:41.000Z",
          "wordCount": 533,
          "title": "Linux 二进制编译安装 Python",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/eclipseweb%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5idea%E5%B7%A6%E4%BE%A7project%E4%B8%8D%E8%A7%81",
          "author": null,
          "description": "#eclipse WEB项目导入idea左侧project不见\n用idea打开eclipse 项目会发现左侧projcet消失\n\n\n2.点file—close project\n\n3.idea会自动回到开始界面 ，在左侧重新打开项目\n \n4.左侧project就出现了",
          "link": "https://blog.vatebur.cn/archives/eclipseweb%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5idea%E5%B7%A6%E4%BE%A7project%E4%B8%8D%E8%A7%81",
          "publishedOn": "2021-12-03T23:06:01.000Z",
          "wordCount": 502,
          "title": "eclipse WEB项目导入idea左侧project不见",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E5%92%8C%E5%B8%B8%E7%94%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7",
          "author": null,
          "description": "#linux的基本命令和常用开发工具\n1）验证实验\n首先生成用户auser\nuseradd -D /usr/auser auser –m\n设置密码\nPasswd auser\n然后切换到用户auserSu - auser\n①文件操作命令\nls——使用ls命令查看文件和目录\n查看目录home下的文件\nls /home                 \n查看目录home下文件的详细信息\nls –l /home\npwd——使用pwd命令查看当前路径\nmkdir——使用mkdir命令创建目录\n在目录home下创建目录文件auser\nmkdir /home/auser      \ncd——使用cd命令切换目录\n切换到用户的家目录\ncd /home           \n切换到当前目录（家目录）下的auser目录中\ncd ./auser \n切换到当前目录的上一级目录\ncd .\ntouch——使用touch更新文件auser的时间标签\n在更新文件的时间标签之前，可先使用ls命令查看文件auser原有的时间标签，\n示例如下：\nls –l /home/auser\n之后再使用touch命令更新时间标签，具体命令如下：\ntouch /home/auser\ncp——使用cp命令复制文件\n  复制etc目录下的passwd文件到auser目录。\ncp /etc/passwd /home/auser/passwd\nmv——使用mv命令移动文件\n移动文件到itcast目录中\nmv /home/auser/passwd /home/itcast\nrm——删除目录或文件\n删除itcast目录中的passwd文件\nrm /home/itcast/passwd\n强制删除目录auser及目录中的子文件\nrm –rf /home/auser    \nrmdir——使用rmdir命令删除目录\n删除目录lauser\nrm…",
          "link": "https://blog.vatebur.cn/archives/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E5%92%8C%E5%B8%B8%E7%94%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7",
          "publishedOn": "2021-11-17T23:01:56.000Z",
          "wordCount": 737,
          "title": "linux的基本命令和常用开发工具",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/c%E7%9A%84%E6%96%87%E4%BB%B6%E5%92%8C%E6%B5%81%E9%93%BE%E8%A1%A8%E7%AE%97%E6%B3%95",
          "author": null,
          "description": "#【C#的文件和流】链表算法\nusing System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;using System.IO;namespace mylist{    ///＜summary&gt;    /// 结点类    ///＜／summary&gt;    public class ListNode    {       public ListNode()       {       }        public string data;        public ListNode next;    }    /// &lt;summary&gt;    /// 链表类    /// &lt;/summary&gt;     public class LinkList   {     private ListNode head;     private ListNode current;        public LinkList()    {    head=null;    current = null;   }   /// &lt;summary&gt;   /// 计算链表长度   /// &lt;summary&gt;   public int Length()   {    current=head;    int length=0;    while(current!= null)    {    current =current.next;    length++;     }     return length;   }   /// &lt;summary&gt;   /// 返回第k…",
          "link": "https://blog.vatebur.cn/archives/c%E7%9A%84%E6%96%87%E4%BB%B6%E5%92%8C%E6%B5%81%E9%93%BE%E8%A1%A8%E7%AE%97%E6%B3%95",
          "publishedOn": "2021-11-17T23:01:55.000Z",
          "wordCount": 916,
          "title": "【C#的文件和流】链表算法",
          "imageUrl": null
        },
        {
          "id": "https://blog.vatebur.cn/archives/%E6%9C%80%E6%96%B0%E7%89%88appium%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95jdk11",
          "author": null,
          "description": "#最新版Appium自动化测试 JDK11\n相关链接（感谢）\n  \n实验平台\nWindows11\nJAVA JDK11\nPython IDE “PyCharm”\nPython Anaconda3（Python 3.8.8）\nAppium Server GUI\nAppium Inspector（新版Appium 将Inspector被分离出来作为一个独立的软件 ）\nAndroid Studio (Android SDK)\nnodejs\n实验步骤\n**1.****配置环境 **\n（1）安装PyCharm\n\n（2）安装Anaconda3（python3.8.8）直接安装python也行\n\n \n（3）在Anaconda3的控制台安装” appium-python-client”.\npython需要appium-python-client调用 Appium Server 进行通信\n\n（4）配置PyCharm的python（Anaconda3）环境\n\n \n \n（5）安装 Android SDK 。\n我手机是安卓11，为了保证SDK对安卓11的支持。这里我是下载了**Android Studio****。**再用Android Studio下载android 11的SKD。\n\n也可以直接下载androidsdk解压。这样占用存储空间会小一点\n（5.1）配置SDK环境变量\n在系统变量里添加 “ANDROID_HOME”,Android Studio的SKD默认保存在\nC:\\Users\\用户\\AppData\\Local\\Android\\Sdk。\n并在path里加上platform-tools地址\n\n \n配置完以后到cmd里输入adb查看是否配置正确\n\n（6）连接手机 打开手机开发者模式并进入，打开USB调试。（不同品牌开发者模式位置不同）\n\n \n（6.1）连接好以后，打开命令行窗口（cmd）…",
          "link": "https://blog.vatebur.cn/archives/%E6%9C%80%E6%96%B0%E7%89%88appium%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95jdk11",
          "publishedOn": "2021-11-11T23:04:51.000Z",
          "wordCount": 756,
          "title": "最新版Appium自动化测试 JDK11",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "qq_53958979的博客",
      "feedUrl": "https://blog.csdn.net/qq_53958979/rss/list",
      "siteUrl": "https://blog.csdn.net/qq_53958979",
      "articles": [
        {
          "id": "https://blog.csdn.net/qq_53958979/article/details/126668499",
          "author": "qq_53958979",
          "description": "打开一个文件夹，创建第一个main程序，按下f6或者f8，能够运行就说明配置成功了。安装之后tdm-gcc会自动配置环境变量，不需要手动配置。3.在Vscode中下载对应插件。点击扩展设置进行编译设置。在设置中按照如下设置。",
          "link": "https://blog.csdn.net/qq_53958979/article/details/126668499",
          "publishedOn": "2022-09-02T10:25:28.000Z",
          "wordCount": 1161,
          "title": "Visual Studio Code使用TDM—gcc编译器配置c/c++环境",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/qq_53958979/article/details/126310706",
          "author": "qq_53958979",
          "description": "对鸿蒙系统环境搭建介绍，如有不对或者问题请及时指出",
          "link": "https://blog.csdn.net/qq_53958979/article/details/126310706",
          "publishedOn": "2022-08-13T05:15:58.000Z",
          "wordCount": 1317,
          "title": "在linux系统下搭建鸿蒙bearPi的编译环境",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/qq_53958979/article/details/125536203",
          "author": "qq_53958979",
          "description": "pip命令切换镜像源",
          "link": "https://blog.csdn.net/qq_53958979/article/details/125536203",
          "publishedOn": "2022-06-30T02:54:40.000Z",
          "wordCount": 853,
          "title": "使用pip命令切换不同的镜像源",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/qq_53958979/article/details/125194062",
          "author": "qq_53958979",
          "description": "对于大小端模式的一些概括",
          "link": "https://blog.csdn.net/qq_53958979/article/details/125194062",
          "publishedOn": "2022-06-08T15:32:27.000Z",
          "wordCount": 1100,
          "title": "大端模式和小端模式的区别",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/qq_53958979/article/details/125086028",
          "author": "qq_53958979",
          "description": "对于网络编程中JSON解析数据的一些看法",
          "link": "https://blog.csdn.net/qq_53958979/article/details/125086028",
          "publishedOn": "2022-06-01T08:54:19.000Z",
          "wordCount": 1141,
          "title": "Android JSON数据解析",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/qq_53958979/article/details/125073959",
          "author": "qq_53958979",
          "description": "简要讲一下多路复用I/Oselect epoll poll的区别",
          "link": "https://blog.csdn.net/qq_53958979/article/details/125073959",
          "publishedOn": "2022-05-31T14:07:46.000Z",
          "wordCount": 1171,
          "title": "浅谈linux网络编程中select,poll,epoll的区别",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/qq_53958979/article/details/122776094",
          "author": "qq_53958979",
          "description": "今天碰到的问题，当作笔记记下来了",
          "link": "https://blog.csdn.net/qq_53958979/article/details/122776094",
          "publishedOn": "2022-02-03T07:20:13.000Z",
          "wordCount": 961,
          "title": "c++中基类的析构函数为什么要写成虚函数",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/qq_53958979/article/details/122083290",
          "author": "qq_53958979",
          "description": ":D",
          "link": "https://blog.csdn.net/qq_53958979/article/details/122083290",
          "publishedOn": "2021-12-22T05:36:07.000Z",
          "wordCount": 1464,
          "title": "2021 JAVA期末复习（编程题）3",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/qq_53958979/article/details/122060941",
          "author": "qq_53958979",
          "description": "自用材料",
          "link": "https://blog.csdn.net/qq_53958979/article/details/122060941",
          "publishedOn": "2021-12-21T09:48:39.000Z",
          "wordCount": 1526,
          "title": "2021 JAVA期末复习（编程题）2",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/qq_53958979/article/details/122053865",
          "author": "qq_53958979",
          "description": "学校期末考试自用，没啥含金量",
          "link": "https://blog.csdn.net/qq_53958979/article/details/122053865",
          "publishedOn": "2021-12-20T18:36:33.000Z",
          "wordCount": 1391,
          "title": "2021 JAVA期末复习（编程题）1",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "m0_50957668的博客",
      "feedUrl": "https://blog.csdn.net/m0_50957668/rss/list",
      "siteUrl": "https://blog.csdn.net/m0_50957668",
      "articles": [
        {
          "id": "https://blog.csdn.net/m0_50957668/article/details/126763408",
          "author": "m0_50957668",
          "description": "在 SQL 连接查询时关于使用 WHERE 和 JOIN ON 的区别讨论以及社区语法规范推荐",
          "link": "https://blog.csdn.net/m0_50957668/article/details/126763408",
          "publishedOn": "2022-09-08T06:14:18.000Z",
          "wordCount": 1322,
          "title": "连接查询中WHERE 和 ON 的区别",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/m0_50957668/article/details/125949328",
          "author": "m0_50957668",
          "description": "突发奇想想在右键菜单的新建里加个markdown，看网上的教程踩了一堆坑\n把自己搜到和尝试出来的东西做个总结以供参考，侵删",
          "link": "https://blog.csdn.net/m0_50957668/article/details/125949328",
          "publishedOn": "2022-07-23T08:37:36.000Z",
          "wordCount": 1115,
          "title": "Windows如何自定义右键新建菜单栏",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/m0_50957668/article/details/125099733",
          "author": "m0_50957668",
          "description": "坏了编程题忘记整了",
          "link": "https://blog.csdn.net/m0_50957668/article/details/125099733",
          "publishedOn": "2022-06-02T06:09:47.000Z",
          "wordCount": 1126,
          "title": "Android程序设计2020期末编程知识点整理",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/m0_50957668/article/details/125081604",
          "author": "m0_50957668",
          "description": "仅供班级复习用，无含金量",
          "link": "https://blog.csdn.net/m0_50957668/article/details/125081604",
          "publishedOn": "2022-06-01T05:02:17.000Z",
          "wordCount": 1632,
          "title": "2022Android程序设计期末知识点整理",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/m0_50957668/article/details/125030969",
          "author": "m0_50957668",
          "description": "仅供班级复习，无含金量\n摆了几天没做这玩意，希望还来得及",
          "link": "https://blog.csdn.net/m0_50957668/article/details/125030969",
          "publishedOn": "2022-05-29T06:53:51.000Z",
          "wordCount": 2037,
          "title": "2022数据库期末考简答题知识点整理",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/m0_50957668/article/details/122087171",
          "author": "m0_50957668",
          "description": "仅作为班级期末复习整理\n无含金量",
          "link": "https://blog.csdn.net/m0_50957668/article/details/122087171",
          "publishedOn": "2021-12-22T07:38:37.000Z",
          "wordCount": 2579,
          "title": "2021Java期末考选择判断题复习",
          "imageUrl": null
        },
        {
          "id": "https://blog.csdn.net/m0_50957668/article/details/121602919",
          "author": "m0_50957668",
          "description": "整理了Java中ArrayList集合删除特定元素(remove(Object o)方法)的具体用法希望可以帮到和我一样对此产生疑问但找不到答案的人",
          "link": "https://blog.csdn.net/m0_50957668/article/details/121602919",
          "publishedOn": "2021-11-29T01:56:46.000Z",
          "wordCount": 1544,
          "title": "如何正确使用remove(Object o)删除ArrayList中的自定义对象(如何从ArrayList中删除特定的对象？)",
          "imageUrl": null
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}